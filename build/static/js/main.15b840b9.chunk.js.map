{"version":3,"sources":["components/Sidebardata.js","components/Sidebar.js","functions/functions.js","Pages/Dashboard.js","Pages/Escrows.js","Pages/Partner.js","Pages/Track.js","Pages/UserProfile.js","Pages/Wallet.js","App.js","index.js"],"names":["Sidebardata","title","icon","link","Sidebar","className","map","val","key","id","window","location","pathname","onClick","Id","provider","Web3","providers","HttpProvider","contract","eth","Contract","escrow","abi","ethereum","createEscrow","sellerAddress","amt","timeInDays","a","tx","methods","createEscrowBNB","encodeABI","transactionParameters","to","from","selectedAddress","value","parseInt","toString","data","request","method","params","console","log","message","getModalStyle","top","left","transform","useStyles","makeStyles","theme","root","margin","spacing","width","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","textAlign","Dashbaord","classes","useState","setData","React","modalStyle","open","setOpen","userMatch","setUsermatch","userAddress","setUserAddress","onsubmitForm","e","preventDefault","address","target","amount","days","time","body","style","onSubmit","noValidate","autoComplete","TextField","name","label","Button","size","type","color","variant","useEffect","totalEscrows","call","total","detectEthereumProvider","enable","all","i","getEscrow","details","buyer","seller","push","x","length","start","payType","Modal","onClose","Escrows","Partner","Track","UserProfile","Wallet","App","path","exact","component","Dashboard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15b840b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport ThumbsUpDownIcon from \"@material-ui/icons/ThumbsUpDown\";\r\n\r\nconst Sidebardata = [\r\n  {\r\n    title: \"Dashboard\",\r\n    icon: <DashboardIcon />,\r\n    link: \"/dashboard\",\r\n  },\r\n  {\r\n    title: \"Escrows\",\r\n    icon: <LocalAtmIcon />,\r\n    link: \"/escrows\",\r\n  },\r\n  {\r\n    title: \"Wallet\",\r\n    icon: <AccountBalanceWalletIcon />,\r\n    link: \"/wallet\",\r\n  },\r\n  {\r\n    title: \"User Profile\",\r\n    icon: <SupervisorAccountIcon />,\r\n    link: \"/userprofile\",\r\n  },\r\n  {\r\n    title: \"Track\",\r\n    icon: <RoomIcon />,\r\n    link: \"/track\",\r\n  },\r\n  {\r\n    title: \"Partner\",\r\n    icon: <ThumbsUpDownIcon />,\r\n    link: \"/partner\",\r\n  },\r\n];\r\n\r\nexport default Sidebardata;\r\n","import React from \"react\";\r\nimport \"../styles/Sidebar.css\";\r\nimport Sidebardata from \"./Sidebardata\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"side-bar\">\r\n      <ul className=\"sidebar-list\">\r\n        {Sidebardata.map((val, key) => {\r\n          return (\r\n            <li\r\n              key={key}\r\n              className=\"row\"\r\n              id={window.location.pathname == val.link ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                window.location.pathname = val.link;\r\n              }}\r\n            >\r\n              <div Id=\"icon\">{val.icon}</div>\r\n              <div Id=\"title\">{val.title}</div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import escrow from '../contracts/CustomisedEscrow.json'\nimport Web3 from 'web3'\nimport detectEthereumProvider from '@metamask/detect-provider';\n\n\nconst provider = new Web3.providers.HttpProvider(\"https://data-seed-prebsc-2-s1.binance.org:8545/\")\n\nconst web3 = new Web3(provider)\n\nconst contract = new web3.eth.Contract(\n  escrow.abi,\n  '0x8F534430DD986130D86DaCB78DF3BA5B0274C8Fe'\n)\n\nconst ethereum = window.ethereum\n// These function should be called in the DashBoard Page\n\nexport async function createEscrow(sellerAddress,amt,timeInDays) {\n    try {\n        if (typeof ethereum !== \"undefined\" && ethereum !== \"\") {\n          const tx = contract.methods.createEscrowBNB(sellerAddress,amt,timeInDays).encodeABI()\n          const transactionParameters = {\n            to: \"0x8F534430DD986130D86DaCB78DF3BA5B0274C8Fe\",\n            from: ethereum.selectedAddress,\n            value:'0x'+parseInt(amt).toString(16),\n            data: tx,\n          }\n          const txHash = await ethereum.request({\n            method: \"eth_sendTransaction\",\n            params: [transactionParameters],\n          })\n        } else {\n          console.log(\"Please install MetaMask!\")\n        }\n      } catch (e) {\n        console.log(e.message)\n      }\n}\n\nexport async function sellerConfirmation(id) {\n    try {\n        if (typeof ethereum !== \"undefined\" && ethereum !== \"\") {\n          const tx = contract.methods.updateSellerStatus(id).encodeABI()\n          const transactionParameters = {\n            to: \"0x8F534430DD986130D86DaCB78DF3BA5B0274C8Fe\",\n            from: ethereum.selectedAddress,\n            data: tx,\n          }\n          const txHash = await ethereum.request({\n            method: \"eth_sendTransaction\",\n            params: [transactionParameters],\n          })\n        } else {\n          console.log(\"Please install MetaMask!\")\n        }\n      } catch (e) {\n        console.log(e.message)\n    }\n}\n\nexport async function buyerConfirmation(id) {   \n    try {\n        if (typeof ethereum !== \"undefined\" && ethereum !== \"\") {\n          const tx = contract.methods.updateDelivery(id).encodeABI()\n          const transactionParameters = {\n            to: \"0x8F534430DD986130D86DaCB78DF3BA5B0274C8Fe\",\n            from: ethereum.selectedAddress,\n            data: tx,\n          }\n          const txHash = await ethereum.request({\n            method: \"eth_sendTransaction\",\n            params: [transactionParameters],\n          })\n        } else {\n          console.log(\"Please install MetaMask!\")\n        }\n      } catch (e) {\n        console.log(e.message)\n    }\n}","import React, { useEffect, useState } from \"react\";\r\nimport detectEthereumProvider from '@metamask/detect-provider'\r\nimport {createEscrow} from '../functions/functions'\r\nimport { Button, Modal, TextField, makeStyles} from \"@material-ui/core\";\r\nimport Web3 from 'web3';\r\nimport \"../styles/Escrows.css\";\r\nimport escrow from '../contracts/CustomisedEscrow.json'\r\n\r\n\r\n\r\nconst provider = new Web3.providers.HttpProvider(\"https://data-seed-prebsc-2-s1.binance.org:8545/\")\r\n\r\n\r\nconst web3 = new Web3(provider)\r\n\r\n\r\nconst contract = new web3.eth.Contract(escrow.abi,\"0x8F534430DD986130D86DaCB78DF3BA5B0274C8Fe\")\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    textAlign: \"center\"\r\n  },\r\n}));\r\n\r\n\r\nconst Dashbaord = () => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState(null)\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [userMatch, setUsermatch] = useState(true);\r\n  const [userAddress, setUserAddress] = useState(\"\");\r\n\r\n\r\n  let provider;\r\n\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onsubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    const address = e.target.address.value;\r\n    const amount = e.target.amount.value;\r\n    const days = e.target.time.value;\r\n\r\n    await createEscrow(address,amount,days);\r\n  }\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Create Escrow</h2>\r\n      <p id=\"simple-modal-description\">\r\n\r\n      </p>\r\n      <form onSubmit={onsubmitForm} className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField id=\"standard-basic\" name=\"address\" label=\"Seller Address\" />\r\n        <TextField id=\"standard-basic\" name=\"amount\" label=\"Amount\" />\r\n        <TextField id=\"standard-basic\" name=\"time\" label=\"Time in Days\" />\r\n        <Button size=\"small\" type=\"submit\" color=\"primary\" variant=\"contained\"  >Create</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    const x = async()=>{\r\n\r\n      const total= await contract.methods.totalEscrows().call();\r\n\r\n      provider = await detectEthereumProvider();\r\n\r\n      if (provider) {\r\n        // From now on, this should always be true:\r\n        // provider === window.ethereum\r\n        provider.enable();\r\n        setUsermatch(false);\r\n        setUserAddress(window.ethereum.selectedAddress)\r\n      } else {\r\n        console.log('Please install MetaMask!');\r\n      }\r\n\r\n      let all = [];\r\n      for (let i = 1; i <= total; i++) {\r\n        console.log(userAddress)\r\n        const details = await contract.methods.getEscrow(i).call();\r\n        if(details.buyer === userAddress || details.seller === userAddress){\r\n          all.push(details)\r\n        }\r\n      }\r\n      setData(all)\r\n    }\r\n    x()\r\n  }, [])\r\n\r\n if(userMatch){\r\n   return <h1>Metamask is Not Connected</h1>;\r\n }\r\n\r\n if(!data) {\r\n   return <h1>You don't have any Escrows</h1>;\r\n }\r\n\r\n if(data.length === 0) {\r\n  return <h1>You don't have any Escrows</h1>;\r\n}\r\n \r\n\r\n  return (\r\n    <>\r\n    <div id=\"escrows-id\">\r\n      <h3>Contract is at https://testnet.bscscan.com/address/0x8F534430DD986130D86DaCB78DF3BA5B0274C8Fe</h3>\r\n      <h1>My Escrows</h1>\r\n      <h2> Active Escrows</h2>\r\n      <Button size='small'\r\n      //  onClick={()=>detect()} \r\n      onClick={handleOpen}\r\n      >Create Escrow</Button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th id=\"first-head\">ID</th>\r\n            <th id=\"second-head\">Buyer</th>\r\n            <th id=\"thid-head\">Seller</th>\r\n            <th id=\"fourth-head\">Amount</th>\r\n            <th id=\"fifth-head\">Started</th>\r\n            <th id=\"sixth-head\">Pay Type</th>  \r\n            <th id=\"seventh-head\">Time in Days</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data && data.map((i) => {\r\n            return(\r\n              <tr>\r\n              <td>{i.id}</td>\r\n              <td>{i.seller}</td>\r\n              <td>{i.buyer}</td>\r\n              <td>{i.amount}</td>\r\n              <td>{i.start}</td>\r\n              <td>{i.payType.toString()}</td>\r\n              <td>{i.timeInDays}</td>\r\n            </tr>\r\n            )\r\n          })}\r\n         \r\n        </tbody>\r\n      </table>\r\n      <h2>Completed Escrows</h2>\r\n      <div>\r\n        <table className=\"second-table\">\r\n          <thead>\r\n            <tr>\r\n              <th id=\"first-head-cmpltd\">No</th>\r\n              <th id=\"second-head-cmpltd\">Name</th>\r\n              <th id=\"thid-head-cmpltd\">Amount</th>\r\n              <th id=\"fourth-head-cmpltd\">Ta/From</th>\r\n              <th id=\"fifth-head-cmpltd\">Created At</th>\r\n              <th id=\"sixth-head-cmpltd\">Completed At</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* {data.map((vname) => {\r\n            <tr>\r\n              <td>{vname.no}</td>\r\n              <td>{vname.name}</td>\r\n              <td>{vname.amount}</td>\r\n              <td>{vname.from}</td>\r\n              <td>{vname.created}</td>\r\n              <td>{vname.completed}</td>\r\n            </tr>;\r\n          })} */}\r\n            <tr>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <h2>Cancelled Escrows</h2>\r\n      <div>\r\n        <table className=\"third-table\">\r\n          <thead>\r\n            <tr>\r\n              <th id=\"first-head-cancd\">No</th>\r\n              <th id=\"second-head-cancld\">Name</th>\r\n              <th id=\"thid-head-cancld\">Amount</th>\r\n              <th id=\"fourth-head-cancld\">Ta/From</th>\r\n              <th id=\"fifth-head-cancld\">Created At</th>\r\n              <th id=\"sixth-head-cancld\">Completed At</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* {data.map((vname) => {\r\n            <tr>\r\n              <td>{vname.no}</td>\r\n              <td>{vname.name}</td>\r\n              <td>{vname.amount}</td>\r\n              <td>{vname.from}</td>\r\n              <td>{vname.created}</td>\r\n              <td>{vname.completed}</td>\r\n            </tr>;\r\n          })} */}\r\n            <tr>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashbaord;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport detectEthereumProvider from '@metamask/detect-provider'\r\nimport {createEscrow} from '../functions/functions'\r\nimport { Button, Modal, TextField, makeStyles} from \"@material-ui/core\";\r\nimport Web3 from 'web3';\r\nimport \"../styles/Escrows.css\";\r\nimport escrow from '../contracts/CustomisedEscrow.json'\r\n\r\n\r\n\r\nconst provider = new Web3.providers.HttpProvider(\"https://data-seed-prebsc-2-s1.binance.org:8545/\")\r\n\r\n\r\nconst web3 = new Web3(provider)\r\n\r\n\r\nconst contract = new web3.eth.Contract(escrow.abi,\"0x8F534430DD986130D86DaCB78DF3BA5B0274C8Fe\")\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    textAlign: \"center\"\r\n  },\r\n}));\r\n\r\n\r\nconst Escrows = () => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState(null)\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  let provider;\r\n\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onsubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    const address = e.target.address.value;\r\n    const amount = e.target.amount.value;\r\n    const days = e.target.time.value;\r\n\r\n    createEscrow(address,amount,days);\r\n  }\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Create Escrow</h2>\r\n      <p id=\"simple-modal-description\">\r\n\r\n      </p>\r\n      <form onSubmit={onsubmitForm} className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField id=\"standard-basic\" name=\"address\" label=\"Seller Address\" />\r\n        <TextField id=\"standard-basic\" name=\"amount\" label=\"Amount\" />\r\n        <TextField id=\"standard-basic\" name=\"time\" label=\"Time in Days\" />\r\n        <Button size=\"small\" type=\"submit\" color=\"primary\" variant=\"contained\"  >Create</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  const detect = async()=>{\r\n    provider = await detectEthereumProvider();\r\n\r\n    if (provider) {\r\n      // From now on, this should always be true:\r\n      // provider === window.ethereum\r\n      provider.enable() // initialize your app\r\n      createEscrow('0x7a2D0Bd4484001A9C1DFa5191DBAcD5bF3A065E1','18900',7)\r\n    } else {\r\n      console.log('Please install MetaMask!');\r\n    }\r\n\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    const x = async()=>{\r\n\r\n      const total= await contract.methods.totalEscrows().call()\r\n\r\n      let all = [];\r\n      for (let i = 1; i <= total; i++) {\r\n        const details = await contract.methods.getEscrow(i).call()\r\n        all.push(details)\r\n      }\r\n      console.log(all)\r\n      setData(all)\r\n    }\r\n    x()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <div id=\"escrows-id\">\r\n      <h3>Contract is at https://testnet.bscscan.com/address/0x8F534430DD986130D86DaCB78DF3BA5B0274C8Fe</h3>\r\n      <h1>My Escrows</h1>\r\n      <h2> Active Escrows</h2>\r\n      <Button size='small'\r\n      //  onClick={()=>detect()} \r\n      onClick={handleOpen}\r\n      >Create Escrow</Button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th id=\"first-head\">ID</th>\r\n            <th id=\"second-head\">Buyer</th>\r\n            <th id=\"thid-head\">Seller</th>\r\n            <th id=\"fourth-head\">Amount</th>\r\n            <th id=\"fifth-head\">Started</th>\r\n            <th id=\"sixth-head\">Pay Type</th>  \r\n            <th id=\"seventh-head\">Time in Days</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data && data.map((i) => {\r\n            return(\r\n              <tr>\r\n              <td>{i.id}</td>\r\n              <td>{i.seller}</td>\r\n              <td>{i.buyer}</td>\r\n              <td>{i.amount}</td>\r\n              <td>{i.start}</td>\r\n              <td>{i.payType.toString()}</td>\r\n              <td>{i.timeInDays}</td>\r\n            </tr>\r\n            )\r\n          })}\r\n         \r\n        </tbody>\r\n      </table>\r\n      <h2>Completed Escrows</h2>\r\n      <div>\r\n        <table className=\"second-table\">\r\n          <thead>\r\n            <tr>\r\n              <th id=\"first-head-cmpltd\">No</th>\r\n              <th id=\"second-head-cmpltd\">Name</th>\r\n              <th id=\"thid-head-cmpltd\">Amount</th>\r\n              <th id=\"fourth-head-cmpltd\">Ta/From</th>\r\n              <th id=\"fifth-head-cmpltd\">Created At</th>\r\n              <th id=\"sixth-head-cmpltd\">Completed At</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* {data.map((vname) => {\r\n            <tr>\r\n              <td>{vname.no}</td>\r\n              <td>{vname.name}</td>\r\n              <td>{vname.amount}</td>\r\n              <td>{vname.from}</td>\r\n              <td>{vname.created}</td>\r\n              <td>{vname.completed}</td>\r\n            </tr>;\r\n          })} */}\r\n            <tr>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <h2>Cancelled Escrows</h2>\r\n      <div>\r\n        <table className=\"third-table\">\r\n          <thead>\r\n            <tr>\r\n              <th id=\"first-head-cancd\">No</th>\r\n              <th id=\"second-head-cancld\">Name</th>\r\n              <th id=\"thid-head-cancld\">Amount</th>\r\n              <th id=\"fourth-head-cancld\">Ta/From</th>\r\n              <th id=\"fifth-head-cancld\">Created At</th>\r\n              <th id=\"sixth-head-cancld\">Completed At</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* {data.map((vname) => {\r\n            <tr>\r\n              <td>{vname.no}</td>\r\n              <td>{vname.name}</td>\r\n              <td>{vname.amount}</td>\r\n              <td>{vname.from}</td>\r\n              <td>{vname.created}</td>\r\n              <td>{vname.completed}</td>\r\n            </tr>;\r\n          })} */}\r\n            <tr>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Escrows;\r\n","import React from \"react\";\r\nimport \"../styles/Partner.css\";\r\n\r\nconst Partner = () => {\r\n  return (\r\n    <div id=\"partner-id\">\r\n      <h1>Partner</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Partner;\r\n","import React from \"react\";\r\nimport \"../styles/Track.css\";\r\n\r\nconst Track = () => {\r\n  return (\r\n    <div id=\"track-id\">\r\n      <h1>Track</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n","import React from \"react\";\r\nimport \"../styles/UserProfile.css\";\r\n\r\nconst UserProfile = () => {\r\n  return (\r\n    <div id=\"user-profile-id\">\r\n      <h1>UserProfile</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport \"../styles/Wallet.css\";\r\n\r\nconst Wallet = () => {\r\n  return (\r\n    <div id=\"wallet-id\">\r\n      <h1>Wallet</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wallet;\r\n","import \"./styles/App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./Pages/Dashboard\";\nimport Escrows from \"./Pages/Escrows\";\nimport Partner from \"./Pages/Partner\";\nimport Track from \"./Pages/Track\";\nimport UserProfile from \"./Pages/UserProfile\";\nimport Wallet from \"./Pages/Wallet\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Sidebar />\n        <Switch>\n          <Route path=\"/\" exact component={Escrows} />\n          <Route path=\"/escrows\" exact component={Escrows} />\n\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n          <Route path=\"/wallet\" exact component={Wallet} />\n          <Route path=\"/userprofile\" exact component={UserProfile} />\n          <Route path=\"/track\" exact component={Track} />\n          <Route path=\"/partner\" exact component={Partner} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}